#!/bin/bash

HERE="$(dirname "$(readlink -f "${0}")")"

progName="cncra"
progArch="-x86_64"
progVer=
progHome="$HOME/.$progName"
progRealPath="$progHome/RedAlert1_Online"
progBin="RA1MPLauncher.exe"
progIcoD="$HOME/.local/share/applications/$progName.desktop"

# Symlink stuff
mkdir -p "$progHome" || exit 1

dkico() {
if [[ ! -f $progIcoD ]]; then

cp -r "$HERE"/usr/share/icons "${HOME}"/.local/share
mkdir -p "${HOME}/.local/share/applications"
DesktopFilePath="${HOME}/.local/share/applications/$progName.desktop"

{
echo "[Desktop Entry]"
echo "Type=Application"
echo "Encoding=UTF-8"
echo "Name=$progName"
echo "Comment="
echo "Exec=$progName"
echo "Icon=$progName"
echo "Categories=Game;"
echo "Terminal=false"
echo "StartupWMClass=RA1MPLauncher.exe,RA95Launcher.exe"
echo "Keywords=game"
} >> "$DesktopFilePath"
fi
}

# check for wine appimage
checkwine=$(find "$HOME"/Downloads "$HOME"/bin "$HOME"/.local/bin -type f \( -name '*.appimage' -o -name '*.AppImage' \) 2>/dev/null | grep -e "wine-stable" -e 'Wine-stable' | head -n 1 | wc -l)

if [ "$checkwine" -eq 1 ]; then
export WINESERVER=$HERE/usr/bin/wineserver
export WINE=$HERE/usr/bin/wine
else
echo "wine-stable appimage is missing can not run cncra"
echo ""
echo "Download wine-stable*bionic.appimage from https://github.com/mmtrt/Wine_Appimage/releases"
echo ""
echo "Then"
echo ""
echo "chmod +x wine-stable*.AppImage"
echo ""
echo "Also make sure you have single copy of wine-stable appimage present these locations"
echo ""
echo "$HOME/Downloads ; $HOME/bin ; $HOME/.local/bin"
exit 1
fi

# Create custom $WINEPREFIX and add $WINEDLLOVERRIDES
export WINEPREFIX="${progHome}/.wine" WINEDLLOVERRIDES="mshtml=" WINEDEBUG="fixme-all" WINEARCH="win32"

if [ ! -d $WINEPREFIX ]; then

if [ ! -f "$HOME"/.cache/wine/wine-mono-4.9.4.msi ]; then
mkdir -p "$HOME"/.cache/wine
ln -s "$HERE"/winedata/wine-mono-4.9.4.msi "$HOME"/.cache/wine/
fi

"$WINE" wineboot

"$WINE" uninstaller --remove "{0A3CE9B1-FEEE-59FE-9F5B-6AD87E9D6D55}"

ln -s "$HERE"/winedata/RedAlert1_Online_Installer.exe "$progHome"

$WINE "$HERE"/winedata/dotnetfx.exe /q /c:"install.exe /q"
$WINE "$progHome"/RedAlert1_Online_Installer.exe /silent
rm "$progHome"/RedAlert1_Online_Installer.exe

fi

# Passing args to wine apps
for i; do # for i = for i in "$@"
    # Add path in Wine form (e.g. "z:/home/user/Desktop/lol.xyz")
    if [[ -f /${i#?:} ]]; then 
        args+=("z:${i#?:}")   # When opened through .desktop or Wine path (e.g. z:/*)
    elif [[ "${i:0:1}" = "-" ]]; then
        args+=("${i/#-//}")
    fi
done

if [ "$1" == "winecfg" ] ; then
  $WINE "winecfg"
elif [ "$1" == "install" ]; then
  dkico
else
  $WINE "$progRealPath/$progBin" "${args[@]}"
fi
